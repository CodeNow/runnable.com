.checkbox-label {
  border-radius: $input-border-radius;
  cursor: pointer;
  padding: $xxs $xs;
  transition: background-color .15s;

  &:hover {
    background-color: rgba($purple-light,.05);
  }
}

// reset checkbox input
.checkbox-input {
  position: absolute; // no effect on layout
  visibility: hidden; // not visible, but functional
}

// actual checkbox
.checkbox {
  background-color: $white;
  border: $input-border-lg solid $gray-lighter;
  border-radius: $input-border-radius-lg;
  cursor: pointer;
  height: 24px;
  position: relative;
  transition: background-color .15s, border-color .15s;
  width: 24px;

  &:hover,
  .checkbox-label:hover & {
    border-color: lighten($purple-light,20);
  }

  &:active,
  .checkbox-label:active & {
    background-color: lighten($purple-light,20);
    border-color: $purple-light;
  }

  &::after {
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 14"><path d="M13.01,2.757a1.5,1.5,0,0,0-2.121,0l-5.3,5.3L3.111,5.586A1.5,1.5,0,1,0,.99,7.707l3.536,3.536a1.5,1.5,0,0,0,2.121,0L13.01,4.879A1.5,1.5,0,0,0,13.01,2.757Z" style="fill:#fff"/></svg>');
    content: '';
    height: 14px;
    left: $input-border-radius;
    opacity: 0;
    position: absolute;
    top: $input-border-radius;
    transform: scale3d(0,0,0);
    transition: transform .15s;
    width: 14px;
  }
}

// logic
.checkbox-input:checked ~ .checkbox {
  background-color: lighten($purple-light,10);
  border-color: $purple-light;

  &::after {
    opacity: 1;
    transform: scale3d(1,1,1);
  }

  &:active::after,
  .checkbox-label:active &::after {
    opacity: 0;
    transform: scale3d(0,0,0);
  }
}
