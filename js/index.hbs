<script>
  var whitelisted = window.location.search !== '?whitelist=false';
  var app = angular.module('homeApp', []);

  app.controller('MainCtrl', function ($scope, $window, $http) {
    $scope.loginUrl = '{{{apiUrl}}}/auth/github?redirect={{{angularUrl}}}/?auth';
    $scope.data = {
      embedActive: false,
      hideUnauthorizedModal: whitelisted
    };

    if (!window.fbq) {
      // Stub fbq
      window.fbq = function () {}
    }

    // scroll to
    if (!whitelisted) {
      fbq('track', 'ViewContent', {
        action: 'notWhitelisted'
      });
      location.hash = '#sign-up-modal';
    }

    $http.get('{{{apiUrl}}}/users/me', {
      withCredentials: true
    })
      .then(function (user) {
        var org;
        try {
          org = user.data.userOptions.uiState.previousLocation.org;
        } catch (e) {
          org = user.data.accounts.github.username;
        }
        var prevInstance;
        try {
          prevInstance = user.data.userOptions.uiState.previousLocation.instance;
        } catch (e) {
        }
        var newURL = '{{{angularUrl}}}/' + org;
        if (prevInstance) {
          newURL += '/' + prevInstance
        }
        $window.location = newURL;
      });

    // form submit
    function markInvalid(e) {
      if (e.target.tagName == 'INPUT') {
        // for invalid event
        var theseInputs = e.target.classList.add('invalid');;
      } else {
        // for change event
        var theseInputs = e.target.getElementsByTagName('input');
        for (var i = 0; i < theseInputs.length; i++) {
          if (!theseInputs[i].validity.valid) {
            theseInputs[i].classList.add('invalid');
          }
        }
      }
    }

    function shakeForm(e) {
      var thisModal = e.target;
      // get modal element
      while ((thisModal = thisModal.parentElement) && !thisModal.classList.contains('modal'));
      thisModal.classList.add('shake');
      thisModal.addEventListener('animationend', function(){
        thisModal.classList.remove('shake');
        thisModal.removeEventListener('animationend', function(){});
      });
    }

    function makeDirty(e){
      e.target.classList.remove('pristine', 'invalid');
    }

    function formInvalid(e) {
      markInvalid(e);
      shakeForm(e);
    }

    function formSubmit(e){
      if (e.target.checkValidity()) {
        fbq('track', 'Lead');
      } else {
        e.preventDefault();
      }
    }

    // flipping cards
    function flipCard(e) {
      var thisCard = e.target;
      // get card element
      while ((thisCard = thisCard.parentElement) && !thisCard.classList.contains('team-card'));
      thisCard.classList.toggle('flip');
    }

    // events
    window.onload = function(){
      //sign up form
      var formSignUp = document.getElementsByClassName('form-sign-up');
      if (formSignUp) {
        for (var i = 0; i < formSignUp.length; i++) {
          formSignUp[i].addEventListener('change', makeDirty);
          formSignUp[i].addEventListener('submit', formSubmit);

          var theseInputs = formSignUp[i].getElementsByTagName('input');
          for (var i = 0; i < theseInputs.length; i++) {
            theseInputs[i].addEventListener('invalid', formInvalid);
          }
        }
      }

      // flipping cards
      var imgFlip = document.getElementsByClassName('img-rounded');
      if (imgFlip) {
        for (var i = 0; i < imgFlip.length; i++) {
          imgFlip[i].addEventListener('click', flipCard);
          imgFlip[i].addEventListener('touchstart', flipCard);
        }
      }
    };
  });
</script>