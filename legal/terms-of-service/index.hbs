<!doctype html>
<html lang="en">

  <head>
    <style>.async-hide {opacity: 0 !important}</style>
<script>(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.end=i=function(){
s.className=s.className.replace(RegExp(' ?'+y),'')};(a[n]=a[n]||[]).hide=h;
setTimeout(function(){i();h.end=null},c);})(window,document.documentElement,
'async-hide','dataLayer',2000,{'GTM-5T3HJWM':true,});</script>


<base href="/runnable.com/">

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="description" content="">
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="icon" type="image/png" href="favicon.png">
<!-- inject:css -->
<!-- endinject -->

<script>
  (function(self) {
  'use strict';

  if (self.fetch) {
    return
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && (function() {
      try {
        new Blob()
        return true
      } catch(e) {
        return false
      }
    })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name)
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value)
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items) {
    var iterator = {
      next: function() {
        var value = items.shift()
        return {done: value === undefined, value: value}
      }
    }

    if (support.iterable) {
      iterator[Symbol.iterator] = function() {
        return iterator
      }
    }

    return iterator
  }

  function Headers(headers) {
    this.map = {}

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value)
      }, this)

    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name])
      }, this)
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name)
    value = normalizeValue(value)
    var list = this.map[name]
    if (!list) {
      list = []
      this.map[name] = list
    }
    list.push(value)
  }

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)]
  }

  Headers.prototype.get = function(name) {
    var values = this.map[normalizeName(name)]
    return values ? values[0] : null
  }

  Headers.prototype.getAll = function(name) {
    return this.map[normalizeName(name)] || []
  }

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  }

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)]
  }

  Headers.prototype.forEach = function(callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function(name) {
      this.map[name].forEach(function(value) {
        callback.call(thisArg, value, name, this)
      }, this)
    }, this)
  }

  Headers.prototype.keys = function() {
    var items = []
    this.forEach(function(value, name) { items.push(name) })
    return iteratorFor(items)
  }

  Headers.prototype.values = function() {
    var items = []
    this.forEach(function(value) { items.push(value) })
    return iteratorFor(items)
  }

  Headers.prototype.entries = function() {
    var items = []
    this.forEach(function(value, name) { items.push([name, value]) })
    return iteratorFor(items)
  }

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result)
      }
      reader.onerror = function() {
        reject(reader.error)
      }
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader()
    reader.readAsArrayBuffer(blob)
    return fileReaderReady(reader)
  }

  function readBlobAsText(blob) {
    var reader = new FileReader()
    reader.readAsText(blob)
    return fileReaderReady(reader)
  }

  function Body() {
    this.bodyUsed = false

    this._initBody = function(body) {
      this._bodyInit = body
      if (typeof body === 'string') {
        this._bodyText = body
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString()
      } else if (!body) {
        this._bodyText = ''
      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {
        // Only support ArrayBuffers for POST method.
        // Receiving ArrayBuffers happens via Blobs, instead.
      } else {
        throw new Error('unsupported BodyInit type')
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8')
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type)
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
        }
      }
    }

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      }

      this.arrayBuffer = function() {
        return this.blob().then(readBlobAsArrayBuffer)
      }

      this.text = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob)
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text')
        } else {
          return Promise.resolve(this._bodyText)
        }
      }
    } else {
      this.text = function() {
        var rejected = consumed(this)
        return rejected ? rejected : Promise.resolve(this._bodyText)
      }
    }

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      }
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    }

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

  function normalizeMethod(method) {
    var upcased = method.toUpperCase()
    return (methods.indexOf(upcased) > -1) ? upcased : method
  }

  function Request(input, options) {
    options = options || {}
    var body = options.body
    if (Request.prototype.isPrototypeOf(input)) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url
      this.credentials = input.credentials
      if (!options.headers) {
        this.headers = new Headers(input.headers)
      }
      this.method = input.method
      this.mode = input.mode
      if (!body) {
        body = input._bodyInit
        input.bodyUsed = true
      }
    } else {
      this.url = input
    }

    this.credentials = options.credentials || this.credentials || 'omit'
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers)
    }
    this.method = normalizeMethod(options.method || this.method || 'GET')
    this.mode = options.mode || this.mode || null
    this.referrer = null

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body)
  }

  Request.prototype.clone = function() {
    return new Request(this)
  }

  function decode(body) {
    var form = new FormData()
    body.trim().split('&').forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
    return form
  }

  function headers(xhr) {
    var head = new Headers()
    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\n')
    pairs.forEach(function(header) {
      var split = header.trim().split(':')
      var key = split.shift().trim()
      var value = split.join(':').trim()
      head.append(key, value)
    })
    return head
  }

  Body.call(Request.prototype)

  function Response(bodyInit, options) {
    if (!options) {
      options = {}
    }

    this.type = 'default'
    this.status = options.status
    this.ok = this.status >= 200 && this.status < 300
    this.statusText = options.statusText
    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
    this.url = options.url || ''
    this._initBody(bodyInit)
  }

  Body.call(Response.prototype)

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  }

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''})
    response.type = 'error'
    return response
  }

  var redirectStatuses = [301, 302, 303, 307, 308]

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  }

  self.Headers = Headers
  self.Request = Request
  self.Response = Response

  self.fetch = function(input, init) {
    return new Promise(function(resolve, reject) {
      var request
      if (Request.prototype.isPrototypeOf(input) && !init) {
        request = input
      } else {
        request = new Request(input, init)
      }

      var xhr = new XMLHttpRequest()

      function responseURL() {
        if ('responseURL' in xhr) {
          return xhr.responseURL
        }

        // Avoid security warnings on getResponseHeader when not allowed by CORS
        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
          return xhr.getResponseHeader('X-Request-URL')
        }

        return
      }

      xhr.onload = function() {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: headers(xhr),
          url: responseURL()
        }
        var body = 'response' in xhr ? xhr.response : xhr.responseText
        resolve(new Response(body, options))
      }

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.ontimeout = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.open(request.method, request.url, true)

      if (request.credentials === 'include') {
        xhr.withCredentials = true
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob'
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value)
      })

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
    })
  }
  self.fetch.polyfill = true
})(typeof self !== 'undefined' ? self : this);

  (function () {
  // Redirect
  Promise.all([
    fetch('{{apiUrl}}/users/me', { credentials: 'include' })
      .then(function (res) { return res.json(); }),
    fetch('{{apiUrl}}/auth/whitelist', { credentials: 'include' })
      .then(function (res) { return res.json(); }),
  ])
    .then(function (res) {
      var user = res[0];
      var whitelistedOrgs = res[1];

      // Get variables we need
      var org;
      try {
        org = user.userOptions.uiState.previousLocation.org;
      } catch (e) {
        return;
      }
      var prevInstance;
      try {
        prevInstance = user.userOptions.uiState.previousLocation.instance;
      } catch (e) {
        return;
      }

      // Populate sign-in url
      var newURL = '{{angularUrl}}/' + org;
      if (prevInstance) {
        newURL += '/' + prevInstance;
      }
      var els = document.getElementsByClassName('btn-sandbox');
      for (var i = 0; i < els.length; i++) {
        els[i].href = newURL;
      }

      // set up avatar
      var userAvatar = document.createElement('img');
      userAvatar.src = whitelistedOrgs[0].org.avatar_url;
      userAvatar.classList.add('grid-content','shrink','avatar');
      userAvatar.height = 21;
      userAvatar.width = 21;

      // set up org name
      var userOrg = document.createElement('div');
      userOrg.classList.add('text-overflow');
      userOrg.textContent = org;

      // set up btn-sandbox in headers
      var headerBtnSandbox = document.createElement('a');
      var overflowMenu = document.getElementsByClassName('btn-overflow')[0];
      headerBtnSandbox.href = newURL;
      headerBtnSandbox.classList.add('grid-block','btn','btn-sm','btn-white','text-white','strong','btn-sandbox','hidden-xs');
      headerBtnSandbox.appendChild(userAvatar.cloneNode(true));
      headerBtnSandbox.appendChild(userOrg.cloneNode(true));
      document.getElementsByTagName('nav')[0].insertBefore(headerBtnSandbox,overflowMenu);

      // set up btn-sandbox in menus
      var menuBtnSandbox = document.createElement('a');
      var menuDivider = document.getElementsByClassName('divider')[0];
      menuBtnSandbox.href = newURL;
      menuBtnSandbox.classList.add('btn','btn-sm','grid-block','justify-center','align-center','shrink','btn-sandbox','strong','visible-xs');
      menuDivider.classList.add('visible-xs');
      menuDivider.classList.remove('visible-md');
      menuBtnSandbox.appendChild(userAvatar.cloneNode(true));
      menuBtnSandbox.appendChild(userOrg.cloneNode(true));
      document.getElementsByClassName('list text-left')[0].insertBefore(menuBtnSandbox,menuDivider);

      // hide sign in and sign up links
      var hideIfSignedIn = document.getElementsByClassName('js-hide-if-signed-in');
      for (var z = hideIfSignedIn.length; z > 0; z--) {
        var i = z - 1;
        if (hideIfSignedIn[i].parentNode) {
          hideIfSignedIn[i].parentNode.removeChild(hideIfSignedIn[i]);
        }
      }
    });
}());

</script>

{{!-- structured data --}}
<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "Organization",
  "url": "https://runnable.com",
  "logo": "https://runnable.com/images/runnable-logo.svg",
  "sameAs": [
    "https://www.facebook.com/runnable",
    "https://twitter.com/GetRunnable",
    "https://github.com/Runnable",
    "https://plus.google.com/+RunnableHQ"
  ],
  "contactPoint": [{
    "@type": "ContactPoint",
    "telephone": "+1-844-786-6225",
    "contactType": "customer service",
    "contactOption": "TollFree"
  }]
}
</script>
<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "WebSite",
  "name": "Runnable",
  "url": "https://runnable.com"
}
</script>

    <title>Our Terms of Service — Runnable</title>
    <script ugly>
      // modals
function openModal(event,dragging) {
  if (!dragging) {
    var openModal = document.getElementsByClassName('modal-backdrop in')[0];
    var modalName = event.target.getAttribute('data-target').substring(1);
    var modal = document.getElementById(modalName);
    var closeTrigger = modal.getElementsByClassName('js-modal-close')[0];

    // close open modal
    if (openModal) {
      openModal.classList.remove('in');
    }
    // show modal
    modal.classList.add('in');
    // stop scrolling
    document.body.classList.add('modal-open');
    // triggers for close button
    closeTrigger.addEventListener('click', closeModal);
    closeTrigger.addEventListener('touchend', closeModal);
    // trigger for esc key
    document.addEventListener('keydown', escModal);

    if (modalName === 'sign-up') {
      setupForm('signup');
    }

    if (modalName === 'video') {
      addVideo();
    }

    // mixpanel
    mixpanel.track('Open Modal: ' + modalName);
  }
}

function escModal(event) {
  if (event.keyCode == 27) {
    closeModal(event);
  }
}

function closeModal(event) {
  var modal = document.getElementsByClassName('modal-backdrop in')[0];
  var closeTrigger = modal.getElementsByClassName('js-modal-close')[0];
  var iframe;

  event.preventDefault();
  // hide modal
  modal.classList.remove('in');
  // resume scrolling
  document.body.classList.remove('modal-open');
  // remove triggers
  closeTrigger.removeEventListener('click', closeModal);
  closeTrigger.removeEventListener('touchend', closeModal);
  document.removeEventListener('keydown', escModal);
  // delete video if it exists
  if (modal.getElementsByTagName('iframe')) {
    iframe = modal.getElementsByTagName('iframe')[0];
    iframe.parentNode.removeChild(iframe);
  }
}

// add video player
function addVideo() {
  var player = document.getElementById('video')
  var iframe = document.createElement('iframe');
  iframe.setAttribute('frameborder','0');
  iframe.setAttribute('allowfullscreen','');
  iframe.setAttribute('src', 'https://www.youtube.com/embed/BX5iPEWSrnY?showinfo=0&autoplay=1&rel=0');
  iframe.classList.add('video-player');
  player.appendChild(iframe);
}

// show bitbucket form
function openBitbucketForm() {
  var gitHubForm = document.getElementsByClassName('article-github')[0];
  var gitHubTrigger = document.getElementsByClassName('js-open-github')[0];
  var bitbucketForm = document.getElementsByClassName('article-bitbucket')[0];
  var bitbucketTrigger = document.getElementsByClassName('js-open-bitbucket')[0];

  bitbucketTrigger.classList.add('hide');
  bitbucketForm.classList.remove('out');
  bitbucketForm.classList.add('in');
  gitHubTrigger.classList.remove('hide');
  gitHubForm.classList.remove('in');
  gitHubForm.classList.add('out');
  // mixpanel
  mixpanel.track('Open Bitbucket form');
}

// show github form
function openGitHubForm() {
  var gitHubForm = document.getElementsByClassName('article-github')[0];
  var gitHubTrigger = document.getElementsByClassName('js-open-github')[0];
  var bitbucketForm = document.getElementsByClassName('article-bitbucket')[0];
  var bitbucketTrigger = document.getElementsByClassName('js-open-bitbucket')[0];

  gitHubTrigger.classList.add('hide');
  gitHubForm.classList.remove('out');
  gitHubForm.classList.add('in');
  bitbucketTrigger.classList.remove('hide');
  bitbucketForm.classList.remove('in');
  // mixpanel
  mixpanel.track('Open GitHub form');
}

// set up forms
function setupForm(formName) {
  var formEl;
  if (formName === 'signup') {
    var openBitbucketFormTrigger = document.getElementsByClassName('js-open-bitbucket')[0];
    var openGitHubFormTrigger = document.getElementsByClassName('js-open-github')[0];
    var linkGitHub = document.getElementsByClassName('track-grant-access-github')[0];

    openGitHubFormTrigger.addEventListener('click', function(e) {
      e.stopPropagation();
      e.preventDefault();
      openGitHubForm();
    });
    openGitHubFormTrigger.addEventListener('touchend', function(e) {
      e.stopPropagation();
      e.preventDefault();
      openGitHubForm();
    });
    openBitbucketFormTrigger.addEventListener('click', function(e) {
      e.stopPropagation();
      e.preventDefault();
      openBitbucketForm();
    });
    openBitbucketFormTrigger.addEventListener('touchend', function(e) {
      e.stopPropagation();
      e.preventDefault();
      openBitbucketForm();
    });

    formEl = document.getElementsByClassName('form-bitbucket');
    // mixpanel
    linkGitHub.addEventListener('click', function(){
      mixpanel.track('Open URL: GitHub Auth');
    });
    linkGitHub.addEventListener('touchend', function(){
      mixpanel.track('Open URL: GitHub Auth');
    });
  } else if (formName === 'enterprise') {
    formEl = document.getElementsByClassName('form-enterprise');
  }
  for (i = 0; i < formEl.length; i++) {
    formEl[i].addEventListener('change', makeDirty);
    formEl[i].addEventListener('submit', submitForm);
    formEl[i].getElementsByTagName('input')[0].addEventListener('invalid', formInvalid);
    formEl[i].getElementsByTagName('input')[1].addEventListener('invalid', formInvalid);
  }
}

function markInvalid(e) {
  var thisTarget = e.target;
  var theseInputs;
  var i;

  if (thisTarget.tagName == 'INPUT') {
    // for invalid event
    thisTarget.classList.add('invalid');
  } else {
    // for change event
    theseInputs = thisTarget.getElementsByTagName('input');
    for (i = 0; i < theseInputs.length; i++) {
      if (!theseInputs[i].validity.valid) {
        theseInputs[i].classList.add('invalid');
      }
    }
  }
}

function shakeForm(e) {
  var thisForm = e.target;

  // get shake element
  if (!thisForm.classList.contains('shake-me')) {
    while ((thisForm = thisForm.parentNode) && !thisForm.classList.contains('shake-me'));
  }
  thisForm.classList.add('shake');
  thisForm.addEventListener('animationend', function(){
    thisForm.classList.remove('shake');
    thisForm.removeEventListener('animationend', function(){});
  });
}

function makeDirty(e) {
  e.target.classList.remove('pristine', 'invalid');
}

function formInvalid(e) {
  markInvalid(e);
  shakeForm(e);
}

function toggleEditing(form, state) {
  var i;
  var theseInputs = form.getElementsByTagName('input');
  var theseTextareas = form.getElementsByTagName('textarea')[0];
  var submitButton = form.getElementsByTagName('button')[0];
  var spinner = document.getElementsByClassName('spinner-wrapper');

  if (state === 'disable') {
    if (theseInputs) {
      for (i = 0; i < theseInputs.length; i++) {
        theseInputs[i].disabled = true;
      }
    }
    if (theseTextareas) {
      theseTextareas.disabled = true;
    }
    submitButton.disabled = true;
    if (submitButton.classList.contains('green')) {
      submitButton.children[0].innerHTML += '<div class="grid-content shrink spinner-wrapper spinner-sm spinner-white"><svg viewbox="0 0 16 16" class="spinner"><circle cx="8" cy="8" r="7" stroke-linecap="round" class="path"></circle></svg></div>';
    } else {
      submitButton.children[0].innerHTML += '<div class="grid-content shrink spinner-wrapper spinner-sm spinner-gray"><svg viewbox="0 0 16 16" class="spinner"><circle cx="8" cy="8" r="7" stroke-linecap="round" class="path"></circle></svg></div>';
    }
  }
  if (state === 'enable') {
    if (theseInputs) {
      for (i = 0; i < theseInputs.length; i++) {
        theseInputs[i].disabled = false;
      }
    }
    if (theseTextareas) {
      theseTextareas.disabled = false;
    }
    submitButton.disabled = false;
    spinner[0].parentNode.removeChild(spinner[0]);
  }
}

function xhrSubmit(e, form, formData, formName) {
  var xhr = new XMLHttpRequest();
  var xhrUrl;
  var supportEmail;

  if (formName === 'bitbucket') {
    xhrUrl = 'https://codenow.com:8443/bitbucket';
    supportEmail = 'bitbucket@runnable.com';
  } else if (formName === 'enterprise') {
    xhrUrl = 'https://codenow.com:2096/notify/enterprise';
    supportEmail = 'preview@runnable.com';
  }

  // send form
  xhr.open('POST', xhrUrl, true);
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.send(formData);
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4 && xhr.status === 0) {
      shakeForm(e);
      sundipValidation('An error occured. Send us an email at <a class="link" href="mailto:' + supportEmail + '">' + supportEmail + '</a> for help.', form, formName);
      toggleEditing(form, 'enable'); // re-enables form
      // mixpanel
      mixpanel.track('XHR Submit: ' + formName, {
        'server-side validation': 'fail',
        'error': 'xhr.readyState === 4 && xhr.status === 0'
      });
    }
  };
  xhr.onload = function() {
    var response = JSON.parse(xhr.responseText);
    var resultCode = response.result_code;
    var resultMessage = response.result_message;
    var successMsg = form.parentNode.getElementsByClassName('hide')[0];

    // result_codes:
    // -1 = error from sundip
    // 0 = error from active campaign
    // 1 = success from active campaign
    if (resultCode === -1 || resultCode === 0) {
      shakeForm(e);
      sundipValidation(resultMessage, form, formName);
      // mixpanel
      mixpanel.track('XHR Submit: ' + formName, {
        'server-side validation': 'fail',
        'error': (resultCode === -1 ? 'From Sundip’s script' : 'From Active Campaign')
      });
    }
    if (resultCode === 1) {
      // tell the user something nice
      form.classList.add('hide');
      form.classList.remove('show');
      successMsg.classList.add('show');
      successMsg.classList.remove('hide');
      // mixpanel
      mixpanel.track('XHR Submit: ' + formName, {
        'server-side validation': 'pass'
      });
    }
    toggleEditing(form, 'enable'); // re-enables form
  };
}

function submitForm(e) {
  var form = e.target;
  var formName;

  if (form.classList.contains('form-bitbucket')) {
    formName = 'bitbucket';
  } else if (form.classList.contains('form-enterprise')) {
    formName = 'enterprise';
  }

  e.preventDefault();
  if (form.checkValidity()) {
    var emailValue = form.querySelectorAll('[name="email"]')[0].value;
    var nameValue = form.querySelectorAll('[name="name"]')[0].value;
    var formData;

    toggleEditing(form, 'disable'); // disables inputs
    // jsonify form data
    formData = {
      email: emailValue,
      name: nameValue
    };

    analytics.ready(function() {
      analytics.track(formName + '-list sign up', {email: emailValue, name: nameValue, clientId: ga.getAll()[0].get('clientId')});
    });
    formData = JSON.stringify(formData); // convert to JSON
    xhrSubmit(e, form, formData, formName);
    // mixpanel
    mixpanel.track('FE Submit: ' + formName, {
      'front-end validation': 'pass'
    });
  }
}

function sundipValidation(resultMessage, form, formName) {
  var prevError = form.getElementsByClassName('red')[0];
  var error = document.createElement('small');
  var submitButton = form.getElementsByTagName('button')[0];

  if (prevError) {
    prevError.parentNode.removeChild(prevError);
  }

  error.classList.add('popover', 'bottom', 'in', 'small','red','text-center');
  error.innerHTML = resultMessage;
  submitButton.appendChild(error);

  analytics.ready(function() {
    analytics.track('Error ' + formName + '-list form', {error: resultMessage, clientId: ga.getAll()[0].get('clientId')});
  });
}

// events
window.addEventListener('DOMContentLoaded', function(){
  var modalTriggers = document.getElementsByClassName('js-modal');
  var dBody = document.body;
  var dragging = false;
  var i;

  // prevent drag touch
  dBody.addEventListener('touchmove',function(){dragging = true;});
  dBody.addEventListener('touchstart',function(){dragging = false;});

  // modals
  if (modalTriggers) {
    for (i = 0; i < modalTriggers.length; i++) {
      /* jshint loopfunc: true */
      modalTriggers[i].addEventListener('click', function(event){
        openModal(event,dragging);
      });
      modalTriggers[i].addEventListener('touchend', function(event){
        openModal(event,dragging);
      });
    }
  }

  // if sign up page
  if (window.location.pathname === '/signup/') {
    setupForm('signup');
  }
  // if pricing page
  if (window.location.pathname === '/pricing/') {
    setupForm('enterprise');
  }
});

window.addEventListener('load', function(){
  // stub fbq
  if (!window.fbq) {
    window.fbq = function () {};
  }
});

      // polyfill for svgs with base element
(function(document, window) {
  'use strict';
  document.addEventListener('DOMContentLoaded', function() {
    // Current URL, without the hash
    var baseUrl = window.location.href.replace(window.location.hash, '');
      [].slice.call(document.querySelectorAll("use[*|href]"))
        .filter(function(element) {
          return (element.getAttribute('xlink:href').indexOf('#') === 0);
        })
        .forEach(function(element) {
          element.setAttribute('xlink:href', baseUrl + element.getAttribute('xlink:href'));
        });
  }, false);
}(document, window));

      window.addEventListener('load', function(){
  var statusPage = new StatusPage.page({page:'ngvk75ydhg3t'});
  var footer = document.getElementsByClassName('footer')[0];
  var statusElement = document.createElement('a');
  var statusText;
  var statusColor;

  // set up status element
  statusElement.href = '//status.runnable.com';
  statusElement.classList.add('btn','btn-xs','link','strong','status');

  statusPage.components({
    success : function(data) {
      // add status element
      footer.appendChild(statusElement);

      // set text
      switch (data.components[0].status) {
        case 'operational':
          statusText = 'Status: Beary good!';
          statusColor = 'status-green';
          break;
        case 'degraded_performance':
        case 'partial_outage':
          statusText = 'Partial Outage';
          statusColor = 'status-orange';
          break;
        case 'major_outage':
          statusText = 'Major Outage';
          statusColor = 'status-red';
          break;
      }

      statusElement.textContent = statusText;
      statusElement.classList.add(statusColor);
    }
  });
});

    </script>

    <!--
      Commit Hash: {{{commitHash}}}
      Commit Time: {{{commitTime}}}
    -->

  <body class="page-landing" ontouchstart>

    <svg xmlns="http://www.w3.org/2000/svg" class="icon-defintions">
  <symbol id="icons-bitbucket" viewBox="0 0 27.438 31.681">
    <path d="M29.208,3.519a3.47,3.47,0,0,0-.729-0.738,8.244,8.244,0,0,0-2.01-1.1A21.7,21.7,0,0,0,21.768.45,39.134,39.134,0,0,0,10.037.434,24.268,24.268,0,0,0,6,1.385,10.419,10.419,0,0,0,3.525,2.549a4.165,4.165,0,0,0-.976.869,1.832,1.832,0,0,0-.4,1.479C2.32,5.989,2.48,7.082,2.66,8.169q0.4,2.417.811,4.828c0.306,1.787.62,3.573,0.918,5.36a2.026,2.026,0,0,0,.526,1.07,5.663,5.663,0,0,0,.574.543,9.178,9.178,0,0,0,2.432,1.354,20.379,20.379,0,0,0,6.485,1.328,25.257,25.257,0,0,0,4.838-.187,19.46,19.46,0,0,0,4.011-.948,10.809,10.809,0,0,0,2.725-1.382,4.323,4.323,0,0,0,.945-0.9,1.791,1.791,0,0,0,.354-0.805c0.4-2.341.809-4.679,1.2-7.021,0.362-2.172.7-4.346,1.058-6.518A1.78,1.78,0,0,0,29.208,3.519ZM15.82,19.64a4.361,4.361,0,1,1,4.386-4.334A4.359,4.359,0,0,1,15.82,19.64Zm8.7-15.246a1.832,1.832,0,0,1-.436.357,5.524,5.524,0,0,1-1.454.541,20.191,20.191,0,0,1-2.9.485,37.5,37.5,0,0,1-3.791.188,37.891,37.891,0,0,1-4.332-.238,15.852,15.852,0,0,1-3.146-.633,6.893,6.893,0,0,1-.883-0.381,1.385,1.385,0,0,1-.386-0.3A0.443,0.443,0,0,1,7.2,3.746,1.752,1.752,0,0,1,7.61,3.43a5.392,5.392,0,0,1,1.359-.512,20.355,20.355,0,0,1,2.994-.509,37.618,37.618,0,0,1,4.967-.172,30.478,30.478,0,0,1,4.55.431,10.33,10.33,0,0,1,2.075.545,5.336,5.336,0,0,1,.683.346,1.085,1.085,0,0,1,.288.266A0.422,0.422,0,0,1,24.522,4.394Zm1.664,18.367a0.955,0.955,0,0,1-.021.271c-0.305,1.6-.614,3.2-0.911,4.811a2.6,2.6,0,0,1-.724,1.377,5.442,5.442,0,0,1-1.448,1.023A12.151,12.151,0,0,1,20,31.274a18.806,18.806,0,0,1-3.563.407,20.746,20.746,0,0,1-5.917-.7,9.9,9.9,0,0,1-2.3-.953,5.078,5.078,0,0,1-1.042-.789,2.6,2.6,0,0,1-.741-1.4c-0.3-1.6-.609-3.207-0.915-4.81A1.12,1.12,0,0,1,5.5,22.79a0.479,0.479,0,0,1,.724-0.423c0.036,0.021.072,0.041,0.105,0.063a13.221,13.221,0,0,0,3.858,1.856,18.062,18.062,0,0,0,3.873.758,19.587,19.587,0,0,0,4.54-.11,16.41,16.41,0,0,0,5.687-1.827c0.354-.194.686-0.43,1.025-0.646a1.715,1.715,0,0,1,.167-0.1A0.48,0.48,0,0,1,26.186,22.761Zm-8.159-7.477a2.185,2.185,0,1,1-2.177-2.193A2.192,2.192,0,0,1,18.027,15.284Z", transform="translate(-2.122)"</<path d="M29.208,3.519a3.47,3.47,0,0,0-.729-0.738,8.244,8.244,0,0,0-2.01-1.1A21.7,21.7,0,0,0,21.768.45,39.134,39.134,0,0,0,10.037.434,24.268,24.268,0,0,0,6,1.385,10.419,10.419,0,0,0,3.525,2.549a4.165,4.165,0,0,0-.976.869,1.832,1.832,0,0,0-.4,1.479C2.32,5.989,2.48,7.082,2.66,8.169q0.4,2.417.811,4.828c0.306,1.787.62,3.573,0.918,5.36a2.026,2.026,0,0,0,.526,1.07,5.663,5.663,0,0,0,.574.543,9.178,9.178,0,0,0,2.432,1.354,20.379,20.379,0,0,0,6.485,1.328,25.257,25.257,0,0,0,4.838-.187,19.46,19.46,0,0,0,4.011-.948,10.809,10.809,0,0,0,2.725-1.382,4.323,4.323,0,0,0,.945-0.9,1.791,1.791,0,0,0,.354-0.805c0.4-2.341.809-4.679,1.2-7.021,0.362-2.172.7-4.346,1.058-6.518A1.78,1.78,0,0,0,29.208,3.519ZM15.82,19.64a4.361,4.361,0,1,1,4.386-4.334A4.359,4.359,0,0,1,15.82,19.64Zm8.7-15.246a1.832,1.832,0,0,1-.436.357,5.524,5.524,0,0,1-1.454.541,20.191,20.191,0,0,1-2.9.485,37.5,37.5,0,0,1-3.791.188,37.891,37.891,0,0,1-4.332-.238,15.852,15.852,0,0,1-3.146-.633,6.893,6.893,0,0,1-.883-0.381,1.385,1.385,0,0,1-.386-0.3A0.443,0.443,0,0,1,7.2,3.746,1.752,1.752,0,0,1,7.61,3.43a5.392,5.392,0,0,1,1.359-.512,20.355,20.355,0,0,1,2.994-.509,37.618,37.618,0,0,1,4.967-.172,30.478,30.478,0,0,1,4.55.431,10.33,10.33,0,0,1,2.075.545,5.336,5.336,0,0,1,.683.346,1.085,1.085,0,0,1,.288.266A0.422,0.422,0,0,1,24.522,4.394Zm1.664,18.367a0.955,0.955,0,0,1-.021.271c-0.305,1.6-.614,3.2-0.911,4.811a2.6,2.6,0,0,1-.724,1.377,5.442,5.442,0,0,1-1.448,1.023A12.151,12.151,0,0,1,20,31.274a18.806,18.806,0,0,1-3.563.407,20.746,20.746,0,0,1-5.917-.7,9.9,9.9,0,0,1-2.3-.953,5.078,5.078,0,0,1-1.042-.789,2.6,2.6,0,0,1-.741-1.4c-0.3-1.6-.609-3.207-0.915-4.81A1.12,1.12,0,0,1,5.5,22.79a0.479,0.479,0,0,1,.724-0.423c0.036,0.021.072,0.041,0.105,0.063a13.221,13.221,0,0,0,3.858,1.856,18.062,18.062,0,0,0,3.873.758,19.587,19.587,0,0,0,4.54-.11,16.41,16.41,0,0,0,5.687-1.827c0.354-.194.686-0.43,1.025-0.646a1.715,1.715,0,0,1,.167-0.1A0.48,0.48,0,0,1,26.186,22.761Zm-8.159-7.477a2.185,2.185,0,1,1-2.177-2.193A2.192,2.192,0,0,1,18.027,15.284Z" transform="translate(-2.122)"/>
  </symbol>
  <symbol id="icons-check" viewBox="0 0 14.5 10">
    <path d="M7.25,14a1,1,0,0,1-.707-0.293l-4.5-4.5A1,1,0,0,1,3.457,7.793L7.25,11.586l7.293-7.293a1,1,0,0,1,1.414,1.414l-8,8A1,1,0,0,1,7.25,14Z" transform="translate(-1.75 -4)"/>
  </symbol>
  <symbol id="icons-chevron-right" viewBox="0 0 11 18">
    <polyline points="1 1 10 9 1 17" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
  </symbol>
  <symbol id="icons-chevron-down" viewBox="0 0 18 11">
    <polyline points="17 1 9 10 1 1" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></polyline>
  </symbol>
  <symbol id="icons-close" viewBox="0 0 30 30">
    <path d="M21,22.2c-0.3,0-0.5-0.1-0.7-0.3L15,16.6l-5.3,5.3c-0.4,0.4-1,0.4-1.4,0s-0.4-1,0-1.4l5.3-5.3L8.3,9.9c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-5.3,5.3l5.3,5.3c0.4,0.4,0.4,1,0,1.4C21.5,22.1,21.3,22.2,21,22.2z"/>
  </symbol>
  <symbol id="icons-external" viewBox="0 0 18 18">
    <path d="M15.462,3.306A0.5,0.5,0,0,0,15,3H4.084a0.5,0.5,0,0,0,0,1h9.709L2.646,15.144a0.5,0.5,0,1,0,.707.707L14.5,4.7v9.708a0.5,0.5,0,0,0,1,0V3.5A0.5,0.5,0,0,0,15.462,3.306Z" transform="translate(0)"/>
    <rect width="18" height="18" fill="none"/>
  </symbol>
  <symbol id="icons-github" viewBox="0 0 24 23.41">
    <path d="M24.336,7.791A12.011,12.011,0,0,1,25.52,23.366a12.083,12.083,0,0,1-5.883,4.313A0.686,0.686,0,0,1,19,27.549a0.648,0.648,0,0,1-.187-0.457l0.023-3.281a3.861,3.861,0,0,0-.258-1.395,2.219,2.219,0,0,0-.562-0.832,7.008,7.008,0,0,0,3.738-1.348Q23.41,19.03,23.5,15.655a5.127,5.127,0,0,0-.34-1.782,4.569,4.569,0,0,0-.9-1.43,3.254,3.254,0,0,0,.234-1.078,4.936,4.936,0,0,0-.352-2.109,1.719,1.719,0,0,0-.8.035A7.4,7.4,0,0,0,18.84,10.5a11.493,11.493,0,0,0-6,0,7.4,7.4,0,0,0-2.508-1.207,1.719,1.719,0,0,0-.8-0.035,4.936,4.936,0,0,0-.352,2.109,3.254,3.254,0,0,0,.234,1.078,4.569,4.569,0,0,0-.9,1.43,5.127,5.127,0,0,0-.34,1.782Q8.27,19.03,9.91,20.237a6.976,6.976,0,0,0,3.75,1.348,1.934,1.934,0,0,0-.48.633,3.414,3.414,0,0,0-.293.984,3.316,3.316,0,0,1-1.594.293,2.42,2.42,0,0,1-1.9-1.3,3.234,3.234,0,0,0-.645-0.75,1.767,1.767,0,0,0-1.184-.469q-0.7.023-.527,0.3a1.324,1.324,0,0,0,.551.469,2.583,2.583,0,0,1,.75.82,5.653,5.653,0,0,1,.469.867,2.2,2.2,0,0,0,.984,1.172,4.5,4.5,0,0,0,3.047.258l0.023,2.227a0.648,0.648,0,0,1-.187.457,0.686,0.686,0,0,1-.633.129A12.083,12.083,0,0,1,6.16,23.366,12,12,0,0,1,24.336,7.791Z" transform="translate(-3.84 -4.287)"/>
  </symbol>
  <symbol id="icons-overflow" viewBox="0 0 18 4.688">
    <path fill="currentColor" d="M2.344,7.656A1.344,1.344,0,1,1,1,9,1.345,1.345,0,0,1,2.344,7.656m0-1A2.344,2.344,0,1,0,4.688,9,2.344,2.344,0,0,0,2.344,6.656h0Z" transform="translate(0 -6.656)"/><path fill="currentColor" d="M9,7.656A1.344,1.344,0,1,1,7.656,9,1.345,1.345,0,0,1,9,7.656m0-1A2.344,2.344,0,1,0,11.344,9,2.344,2.344,0,0,0,9,6.656H9Z" transform="translate(0 -6.656)"/><path fill="currentColor" d="M15.656,7.656A1.344,1.344,0,1,1,14.313,9a1.345,1.345,0,0,1,1.344-1.344m0-1A2.344,2.344,0,1,0,18,9a2.344,2.344,0,0,0-2.344-2.344h0Z" transform="translate(0 -6.656)"/>
  </symbol>
  <symbol id="icons-play" viewBox="0 0 30 30">
    <path d="M25.615,13.268a2,2,0,0,1,0,3.464l-7.5,4.33-7.5,4.33a2,2,0,0,1-3-1.732V6.34a2,2,0,0,1,3-1.732l7.5,4.33Z" transform="translate(0 0)"/>
    <rect width="30" height="30" fill="none"/>
  </symbol>
  <symbol id="icons-select" viewBox="0 0 18 18">
    <path d="M6.161,7.01L8.608,3.123a0.5,0.5,0,0,1,.846,0L11.9,7.01a0.5,0.5,0,0,1-.423.766h-4.9A0.5,0.5,0,0,1,6.161,7.01Z"/>
    <path d="M11.9,10.99L9.455,14.877a0.5,0.5,0,0,1-.846,0L6.161,10.99a0.5,0.5,0,0,1,.423-0.766h4.9A0.5,0.5,0,0,1,11.9,10.99Z"/>
    <rect width="18" height="18" fill="none"/>
  </symbol>
</svg>

    <header class="grid-block shrink header">
  <div class="grid-block grid-container justify-justified">
    <a href="/" class="grid-content shrink logo">
      <img class="img" src="images/runnable-logo.svg" height="36" width="192">
    </a>
    <nav class="nav grid-block shrink">
      <a href="for/" class="grid-content btn btn-sm text-white weight-strong hidden-sm a">Product</a>
      <a href="pricing/" class="grid-content btn btn-sm text-white weight-strong hidden-md">Pricing</a>
      <a data-target="#sign-in" class="grid-content btn btn-sm text-white weight-strong hidden-md js-modal js-hide-if-signed-in">Sign In</a>
      <a data-target="#sign-up" class="grid-content btn btn-sm btn-white text-white weight-strong hidden-xs js-modal js-hide-if-signed-in track-sign-up">Sign Up</a>
      <div class="grid-content btn btn-sm btn-overflow popover-trigger hover has-links" tabindex="1">
        <svg class="icons icons-overflow">
          <use xlink:href="#icons-overflow">
        </svg>
        <div class="popover-hover-wrapper right-align-sm">
  <div class="grid-block popover popover-header-menu bottom">
    <div class="grid-block col list text-left">
      <a data-target="#sign-up" class="list-item-a visible-xs js-modal js-hide-if-signed-in track-sign-up">Sign Up</a>
      <a data-target="#sign-in" class="list-item-a visible-md js-modal js-hide-if-signed-in">Sign In</a>
      <div class="list-item divider visible-md"></div>
      <a href="for/" class="list-item-a visible-sm">Product</a>
      <a href="pricing/" class="list-item-a visible-md"><span class="text-request">Pricing</a>
      <a href="how-it-works/" class="list-item-a">How It Works</a>
      <a href="https://support.runnable.com" class="list-item-a">Get Help</a>
      <a href="demo/" class="list-item-a">Request Demo</a>
      <a href="http://blog.runnable.com" class="list-item-a">Blog</a>
      <a href="about/" class="list-item-a">About</a>
    </div>
  </div>
</div>

      </div>
    </div>
  </nav>
</header>


    <main class="grid-block col main hero-only">
      <article class="hero">
  <h1 class="h1 text-center">Our Terms of Service</h1>
  <p class="p text-center">Updated September 19<sup class="sup">th</sup>, 2016</p>
</article>

      <article class="grid-block col article article-legal">
  <div class="grid-content">
    <p class="p">Welcome, and thank you for your interest in Runnable, Inc. (“<strong class="weight-strong">Runnable</strong>,” “<strong class="weight-strong">we</strong>,” or “<strong class="weight-strong">us</strong>”) and our website at <a href="https://runnable.com" class="link">runnable.com</a>, along with our related websites (including runnable.io), networks, applications, and other services provided by us (collectively, our “<strong class="weight-strong">Service</strong>”). These Terms of Service are a legally binding contract between you and Runnable regarding your use of the Service.
  </div>
  <div class="grid-content">
    <p class="p">PLEASE READ THE FOLLOWING TERMS CAREFULLY. BY AUTHORIZING RUNNABLE TO ACCESS YOUR GITHUB ACCOUNT, BY LOGGING IN, OR BY USING THE SERVICE, YOU ACKNOWLEDGE THAT YOU HAVE READ, UNDERSTOOD, AND AGREE TO BE BOUND BY THE FOLLOWING TERMS AND CONDITIONS, INCLUDING THE RUNNABLE PRIVACY POLICY AND ADDITIONAL TERMS (AS DESCRIBED IN SECTION 11) (TOGETHER, THE “<strong class="weight-strong">TERMS</strong class="weight-strong">”). If you are not eligible, or do not agree to the Terms, then you do not have our permission to use the Service.
  </div>
  <div class="grid-content">
    <p class="p">These Terms provide that all disputes between you and Runnable will be resolved by BINDING ARBITRATION. YOU AGREE TO GIVE UP YOUR RIGHT TO GO TO COURT to assert or defend your rights under this contract,  except for matters that may be taken to small claims court. Your rights will be determined by a NEUTRAL ARBITRATOR and NOT a judge or jury, and your claims cannot be brought as a class action. Please review Section 20 (“<strong class="weight-strong">Dispute Resolution and Arbitration</strong>”) for the details regarding your agreement to arbitrate any disputes with Runnable.
  </div>
  <div class="grid-content">
    <ol class="ol">
      <li class="li"><strong class="weight-strong">Runnable Service Overview.</strong> Runnable provides full-stack development and test environments for code branches in a hosted git repository (like GitHub or Bitbucket), allowing users to create, test, and collaborate on software development in real time.
      <li class="li"><strong class="weight-strong">Eligibility.</strong> You must be at least 18 years of age to use the Service. By agreeing to these Terms, you represent and warrant that: (a) you are at least 18 years of age; (b) you have not previously been suspended or removed from the Service; and (c) your registration and your use of the Service is in compliance with all applicable laws and regulations. If you are using the Service on behalf of a company or other organization (your “<strong class="weight-strong">Organization</strong>”), you represent and warrant that you have the authority to bind your Organization to these Terms, you agree to bind your Organization to these Terms, and you have the permission of your Organization to create an account.
      <li class="li"><strong class="weight-strong">Accounts and Registration.</strong> To access most features of the Service, you must register for an account. When you register for an account, you may be required to provide us with some information about yourself or your Organization, such as email address or other contact information. You agree that the information you provide to us is accurate and that you will keep it accurate and up-to-date at all times. When you register, you may be asked to provide a password. You are solely responsible for maintaining the confidentiality of your account and password, and you accept responsibility for all activities that occur under your account. If you have reason to believe that your account is no longer secure, then you must immediately notify us at <a href="mailto:accounts@runnable.com" class="link">accounts@runnable.com</a>.
      <li class="li"><strong class="weight-strong">Payment.</strong> You may be required to pay fees to access the Service or certain features of the Service. All fees are charged as one payment per month to the payment method on file for each Organization. The first user in the Organization to provide a payment method will be responsible for all fees incurred on behalf of the Organization, including all fees for current and future Organization accounts and users. To update the payment method, an Organization user can provide a new payment method, which will be used for all future Organization charges from that point forward. All fees are in U.S. dollars and are non-refundable. If Runnable changes the fees for all or part of the Service, including by adding fees or charges, Runnable will provide you advance notice of those changes. If you do not accept the changes, Runnable may discontinue providing the applicable part of the Service to you. Runnable will charge the payment method specified for your Organization at the time of purchase. You authorize Runnable to charge all fees as described in these Terms for the Service you select to that payment method, and you represent and warrant that you have the permission of your Organization to charge all sums. If you pay any fees with a credit card, Runnable may seek pre-authorization of your credit card account before your purchase to verify that the credit card is valid and has the necessary funds or credit available to cover your purchase. The Service may include functionality for activating, updating, or canceling recurring payments for periodic charges. If you activate or update recurring payments through the Service, you authorize Runnable to periodically charge, on a going-forward basis and until cancellation of either the recurring payments or your account, all accrued sums on or before the payment due date for the accrued sums. If you use the Service to update or cancel any existing authorized one-time or recurring payment, it may take up to 7 business days for the update or cancellation to take effect.
      <li class="li"><strong class="weight-strong">Application Testing.</strong>
        <ol class="ol">
          <li class="li" start="5"><strong class="weight-strong">Applications</strong>. You may upload software applications, including in source code form, (“<strong class="weight-strong">Applications”</strong>) and related images, data, text, and other content (“<strong class="weight-strong">Application Content</strong>”) to the Service solely to develop and test your Applications. <em class="em">You retain all proprietary rights that you may hold in the Applications that you upload to the Service</em>.
          <li class="li" start="5"><strong class="weight-strong">Limited License Grant to Runnable</strong>. By granting Runnable access to Applications and Application Content, you grant Runnable a worldwide, non-exclusive, royalty-free, fully paid right and license (with the right to sublicense) to host, store, transfer, display, perform, reproduce, and modify for the purpose of formatting for display your Application and Application Content, in whole or in part, solely in connection with providing you the Service.
          <li class="li" start="5"><strong class="weight-strong">Reviewers and Environment Links</strong>. You may make your Application available for testing by others (“<strong class="weight-strong">Reviewers</strong>”) on the Service via a web link provided by Runnable (“<strong class="weight-strong">Environment Link</strong>”). By sharing an Environment Link with Reviewers, you grant those Reviewers a non-exclusive license to access and use that Application and related Application Content as permitted by these Terms and the functionality of the Service. You are responsible for the Reviewers’ actions on the Service and for ensuring that the Reviewers comply with these Terms. If Reviewers, in testing the Application, create or upload any code, images, data, text, or other content, that content will be considered Application Content.
          <li class="li" start="5"><strong class="weight-strong">Application and Application Content Representations and Warranties</strong>. You are solely responsible for your Applications and Application Content and the consequences of making Applications and Application Content available to Runnable or Reviewers. By uploading an Application and Application Content to the Service, you represent and warrant that you are the creator and owner of the Application and Application Content, or have the necessary licenses, rights, consents, and permissions to authorize Runnable and Reviewers to access and use your Application and Application Content as necessary to exercise the licenses granted by you in these Terms in the manner contemplated by Runnable, the Service, and these Terms.
          <li class="li" start="5"><strong class="weight-strong">Use of Command Line Interface</strong>. To assist in your use of the Service to develop and test Applications, Runnable may provide access to aspects of the Service via a dedicated command line interface (“Command Line Interface”). Subject to these Terms, including the AUP, we grant you a limited, revocable, non-exclusive, non-transferable license to use the Command Line Interface, solely in connection with using the Service.
          <li class="li" start="5"><strong class="weight-strong">Disclaimer</strong>. We are under no obligation to edit or control any Application, or any Application Content that you, Reviewers, or other users of the Service make available through an Application, and will not be in any way responsible or liable for any Application or Application Content. Runnable may, however, at any time and without prior notice, screen, remove, edit, or block any Application Content that in our sole judgment violates these Terms or is otherwise objectionable, including by blocking or removing an Application. You understand that when using the Service you may be exposed to Application Content from Reviewers or other users and acknowledge that Application Content may be inaccurate, offensive, indecent, or objectionable. You agree to waive, and do waive, any legal or equitable right or remedy you have or may have against Runnable with respect to any Application or Application Content. We expressly disclaim any and all liability in connection with Applications. If notified by a user or content owner that Application Content allegedly does not conform to these Terms, we may investigate the allegation and determine in our sole discretion whether to remove the Application Content, which we reserve the right to do at any time and without notice. For clarity, Runnable does not permit copyright-infringing activities on the Service.
        </ol>
      <li class="li"><strong class="weight-strong">Digital Millennium Copyright Act</strong>.
        <ol class="ol">
          <li class="li" start="6"><strong class="weight-strong">DMCA Notification</strong>. We comply with the provisions of the Digital Millennium Copyright Act applicable to Internet service providers (17 U.S.C. §512, as amended). If you have an intellectual property rights-related complaint about material posted on the Service, you may contact our Designated Agent at the following address:
          <address class="padding-sm">
            Runnable, Inc.<br>
            ATTN: Legal Department (Copyright Notification)<br>
            1481 Folsom Street<br>
            San Francisco, CA 94103<br>
            Email: <a href="mailto:copyright@runnable.com" class="link">copyright@runnable.com</a>
          </address>
          Any notice alleging that materials hosted by or distributed through the Service infringe intellectual property rights must include the following information:
          <ul class="ul list-lower-alpha">
            <li class="li">an electronic or physical signature of the person authorized to act on behalf of the owner of the copyright or other right being infringed;
            <li class="li">a description of the copyright-protected work or other intellectual property right that you claim has been infringed;
            <li class="li">a description of the material that you claim is infringing and where it is located on the Service;
            <li class="li">your address, telephone number, and email address;
            <li class="li">a statement by you that you have a good faith belief that the use of those materials on the Service is not authorized by the copyright owner, its agent, or the law; and
            <li class="li">a statement by you that the above information in your notice is accurate and that, under penalty of perjury, you are the copyright or intellectual property owner or authorized to act on the copyright or intellectual property owner’s behalf.
          </ul>
          <li class="li" start="6"><strong class="weight-strong">Repeat Infringers</strong>. Runnable will promptly terminate without notice the accounts of users that are determined by Runnable to be “<strong class="weight-strong">Repeat Infringers</strong>.” A Repeat Infringer is a user who has been notified of infringing activity or has had Application Content removed from the Service at least twice.
        </ol>
      <li class="li"><strong class="weight-strong">Prohibited Conduct</strong>. BY USING THE SERVICE YOU AGREE NOT TO use the Service for any prohibited conduct, including any illegal activities, spamming or inappropriate activities, security-circumventing activities, non-testing activities, or any other prohibited activities as described in the Runnable Acceptable Use Policy (“<strong class="weight-strong">AUP</strong>”), available at <a href="https://runnable.com/legal/acceptable-use-policy" class="link">https://runnable.com/legal/acceptable-use-policy</a>. Please read the AUP carefully for details on what behaviors constitute prohibited conduct.
      <li class="li"><strong class="weight-strong">Third-Party Services and Linked Websites</strong>. Runnable may provide tools through the Service that enable you to export information, including Application Content, to third party services, including through features that allow you to link your account on Runnable with an account on the third party services, such as GitHub. By using one of these tools, you agree that we may transfer that information to the applicable third-party service. Third party services are not under our control, and we are not responsible for any third party service’s use of your exported information. The Service may also contain links to third-party websites. Linked websites are not under our control, and we are not responsible for their content.
      <li class="li"><strong class="weight-strong">Termination of Use; Discontinuation and Modification of the Service</strong>. You may terminate your account at any time by contacting customer service at <a href="mailto:accounts@runnable.com" class="link">accounts@runnable.com</a>. If you terminate your account, you remain obligated to pay all outstanding fees, if any, incurred prior to termination relating to your use of the Service. If you violate any provision of these Terms, your permission from us to use the Service will terminate automatically. In addition, Runnable may in its sole discretion terminate your user account on the Service or suspend or terminate your access to the Service at any time for any reason or no reason, with or without notice. We also reserve the right to modify or discontinue the Service at any time (including by limiting or discontinuing certain features of the Service), temporarily or permanently, without notice to you. If your account expires or if we suspend your account, we will store any Application Content on the Service as of the moment of expiration or suspension for 30 days from the date of the expiration or suspension, after which we will delete all Application Content. We will have no liability whatsoever on account of any change to the Service or any suspension or termination of your access to or use of the Service.
      <li class="li"><strong class="weight-strong">Privacy Policy; Additional Terms</strong>.
        <ol class="ol">
          <li class="li" start="10"><strong class="weight-strong">Privacy Policy</strong>. Please read the Runnable Privacy Policy, available at <a href="https://www.runnable.com/privacy" class="link">https://www.runnable.com/privacy</a> carefully for information relating to our collection, use, storage and disclosure of your personal information. The Runnable Privacy Policy is incorporated by this reference into, and made a part of, these Terms.
          <li class="li" start="10"><strong class="weight-strong">Additional Terms</strong>. Your use of the Service is subject to all additional terms, policies, rules, or guidelines applicable to the Service or certain features of the Service that we may post on or link to from the Service (the “<strong class="weight-strong">Additional Terms</strong>”), such as end-user license agreements for any downloadable software applications, the AUP, or rules that applicable to a particular feature or content on the Service, subject to Section 12. All Additional Terms are incorporated by this reference into, and made a part of, these Terms.
        </ol>
      <li class="li"><strong class="weight-strong">Modification of these Terms</strong>. We reserve the right, at our discretion, to change these Terms on a going-forward basis at any time. Please check these Terms periodically for changes. If a change to these Terms materially modifies your rights or obligations, you will be required to accept the modified Terms in order to continue to use the Service. Material modifications are effective upon your acceptance of the modified Terms. Immaterial modifications are effective upon publication. Disputes arising under these Terms will be resolved in accordance with the version of these Terms that was in effect at the time the dispute arose.
      <li class="li"><strong class="weight-strong">Ownership; Proprietary Rights</strong>. The Service is owned and operated by Runnable. The visual interfaces, graphics, design, information, data, computer code (including source code or object code), products, software, services, and all other elements of the Service (“<strong class="strong">Materials</strong>”) provided by Runnable are protected by intellectual property and other laws. All Materials included in the Service are the property of Runnable or our third-party licensors. Except as expressly authorized by Runnable, you may not make use of the Materials. Runnable reserves all rights to the Materials not granted expressly in these Terms.
      <li class="li"><strong class="weight-strong">Feedback</strong>. If you choose to provide input and suggestions regarding problems with or proposed modifications or improvements to the Service, including to any Materials, (“<strong class="weight-strong">Feedback</strong>”), then you hereby grant Runnable an unrestricted, perpetual, irrevocable, non-exclusive, fully-paid, royalty-free right to exploit the Feedback in any manner and for any purpose, including to improve the Service and create other products and services.
      <li class="li"><strong class="weight-strong">Indemnity</strong>. You are responsible for your use of the Service, and you will defend and indemnify Runnable and its officers, directors, employees, consultants, affiliates, subsidiaries and agents (together, the “<strong class="weight-strong">Runnable Entities</strong>”) from and against every claim, liability, damage, loss, and expense, including reasonable attorneys’ fees and costs, arising out of or in any way connected with: (a) your access to, use of, or alleged use of, the Service; (b) your violation of any portion of these Terms, any representation, warranty, or agreement referenced in these Terms, or any applicable law or regulation; (c) your violation of any third-party right, including any intellectual property right or publicity, confidentiality, other property, or privacy right; or (d) any dispute or issue between you and any third party. We reserve the right, at our own expense, to assume the exclusive defense and control of any matter otherwise subject to indemnification by you (without limiting your indemnification obligations with respect to that matter), and in that case, you agree to cooperate with our defense of that claim.
      <li class="li"><strong class="weight-strong">Disclaimers; No Warranties</strong>.
        <br>THE SERVICE AND ALL MATERIALS AVAILABLE THROUGH THE SERVICE ARE PROVIDED “<strong class="weight-strong">AS IS</strong>” AND ON AN “<strong class="weight-strong">AS AVAILABLE</strong>” BASIS, WITHOUT WARRANTY OR CONDITION OF ANY KIND, EITHER EXPRESS OR IMPLIED. THE RUNNABLE ENTITIES DISCLAIM ALL WARRANTIES OF ANY KIND, WHETHER EXPRESS OR IMPLIED, RELATING TO THE SERVICE AND ALL MATERIALS AVAILABLE THROUGH THE SERVICE, INCLUDING: (A) ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, QUIET ENJOYMENT, OR NON-INFRINGEMENT; AND (B) ANY WARRANTY ARISING OUT OF COURSE OF DEALING, USAGE, OR TRADE. THE RUNNABLE ENTITIES DO NOT WARRANT THAT THE SERVICE OR ANY PORTION OF THE SERVICE, OR ANY MATERIALS OFFERED THROUGH THE SERVICE, WILL BE UNINTERRUPTED, SECURE, OR FREE OF ERRORS, VIRUSES, OR OTHER HARMFUL COMPONENTS, AND DO NOT WARRANT THAT ANY OF THOSE ISSUES WILL BE CORRECTED.
        <br><br>NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM THE SERVICE OR ANY MATERIALS AVAILABLE THROUGH THE SERVICE WILL CREATE ANY WARRANTY REGARDING ANY OF THE RUNNABLE ENTITIES OR THE SERVICE THAT IS NOT EXPRESSLY STATED IN THESE TERMS. YOU ASSUME ALL RISK FOR ANY DAMAGE THAT MAY RESULT FROM YOUR USE OF OR ACCESS TO THE SERVICE, YOUR DEALING WITH ANY OTHER SERVICE USER, AND ANY MATERIALS AVAILABLE THROUGH THE SERVICE. YOU UNDERSTAND AND AGREE THAT YOU USE THE SERVICE, AND USE, ACCESS, DOWNLOAD, OR OTHERWISE OBTAIN MATERIALS THROUGH THE SERVICE AND ANY ASSOCIATED SITES OR SERVICES, AT YOUR OWN DISCRETION AND RISK, AND THAT YOU ARE SOLELY RESPONSIBLE FOR ANY DAMAGE TO YOUR PROPERTY (INCLUDING YOUR COMPUTER SYSTEM OR MOBILE DEVICE USED IN CONNECTION WITH THE SERVICE), OR THE LOSS OF DATA THAT RESULTS FROM THE USE OF THE SERVICE OR THE DOWNLOAD OR USE OF THAT MATERIAL.
        <br><br>SOME JURISDICTIONS MAY PROHIBIT A DISCLAIMER OF WARRANTIES AND YOU MAY HAVE OTHER RIGHTS THAT VARY FROM JURISDICTION TO JURISDICTION.
      <li class="li"><strong class="weight-strong">Limitation of Liability</strong>.
        <br>IN NO EVENT WILL THE RUNNABLE ENTITIES BE LIABLE TO YOU FOR ANY INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL OR PUNITIVE DAMAGES (INCLUDING DAMAGES FOR LOSS OF PROFITS, GOODWILL, OR ANY OTHER INTANGIBLE LOSS) ARISING OUT OF OR RELATING TO YOUR ACCESS TO OR USE OF, OR YOUR INABILITY TO ACCESS OR USE, THE SERVICE OR ANY MATERIALS ON THE SERVICE, WHETHER BASED ON WARRANTY, CONTRACT, TORT (INCLUDING NEGLIGENCE), STATUTE, OR ANY OTHER LEGAL THEORY, AND WHETHER OR NOT ANY RUNNABLE ENTITY HAS BEEN INFORMED OF THE POSSIBILITY OF DAMAGE.
        <br><br>EXCEPT AS PROVIDED IN SECTION 20.4(iii), THE AGGREGATE LIABILITY OF THE RUNNABLE ENTITIES TO YOU FOR ALL CLAIMS ARISING OUT OF OR RELATING TO THE USE OF OR ANY INABILITY TO USE ANY PORTION OF THE SERVICE OR OTHERWISE UNDER THESE TERMS, WHETHER IN CONTRACT, TORT, OR OTHERWISE, IS LIMITED TO THE GREATER OF: (A) THE AMOUNT YOU HAVE PAID TO RUNNABLE FOR ACCESS TO AND USE OF THE SERVICE IN THE 12 MONTHS PRIOR TO THE EVENT(S) OR CIRCUMSTANCES GIVING RISE TO CLAIM; OR (B) $100.
        <br><br>SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES. ACCORDINGLY, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
        <br><br>EACH PROVISION OF THESE TERMS THAT PROVIDES FOR A LIMITATION OF LIABILITY, DISCLAIMER OF WARRANTIES, OR EXCLUSION OF DAMAGES IS INTENDED TO AND DOES ALLOCATE THE RISKS BETWEEN THE PARTIES UNDER THESE TERMS. THIS ALLOCATION IS AN ESSENTIAL ELEMENT OF THE BASIS OF THE BARGAIN BETWEEN THE PARTIES. EACH OF THESE PROVISIONS IS SEVERABLE AND INDEPENDENT OF ALL OTHER PROVISIONS OF THESE TERMS. THE LIMITATIONS IN THIS SECTION 17 WILL APPLY EVEN IF ANY LIMITED REMEDY FAILS OF ITS ESSENTIAL PURPOSE.
      <li class="li"><strong class="weight-strong">Governing Law</strong>. These Terms are governed by the laws of the State of California without regard to conflict of law principles. If a lawsuit or court proceeding is permitted under these Terms, then you and Runnable agree to submit to the personal and exclusive jurisdiction of the state courts and federal courts located within San Francisco County, California for the purpose of litigating any dispute. We operate the Service from our offices in California, and we make no representation that Materials or  the Service are appropriate or available for use in other locations.
      <li class="li"><strong class="weight-strong">General</strong>. These Terms, together with the Privacy Policy and any other agreements expressly incorporated by reference into these Terms, are the entire and exclusive understanding and agreement between you and Runnable regarding your use of the Service. Except as expressly permitted above, these Terms may be amended only by a written agreement signed by authorized representatives of all parties to these Terms. You may not assign or transfer these Terms or your rights under these Terms, in whole or in part, by operation of law or otherwise, without our prior written consent. We may assign these Terms at any time without notice or consent. The failure to require performance of any provision will not affect our right to require performance at any other time after that, nor will a waiver by us of any breach or default of these Terms, or any provision of these Terms, be a waiver of any subsequent breach or default or a waiver of the provision itself. Use of section headers in these Terms is for convenience only and will not have any impact on the interpretation of any provision. If any part of these Terms is held to be invalid or unenforceable, the unenforceable part will be given effect to the greatest extent possible, and the remaining parts will remain in full force and effect. Upon termination of these Terms, Sections 2, 4, and 6 through 21, along with the Privacy Policy and any other accompanying agreements, will survive.
      <li class="li"><strong class="weight-strong">Dispute Resolution and Arbitration</strong>.
        <ol class="ol">
          <li class="li" start="19"><strong class="weight-strong">Generally</strong>. In the interest of resolving disputes between you and Runnable in the most expedient and cost effective manner, you and Runnable agree that every dispute arising in connection with these Terms will be resolved by binding arbitration. Arbitration is less formal than a lawsuit in court. Arbitration uses a neutral arbitrator instead of a judge or jury, may allow for more limited discovery than in court, and can be subject to very limited review by courts. Arbitrators can award the same damages and relief that a court can award. This agreement to arbitrate disputes includes all claims arising out of or relating to any aspect of these Terms, whether based in contract, tort, statute, fraud, misrepresentation, or any other legal theory, and regardless of whether a claim arises during or after the termination of these Terms. YOU UNDERSTAND AND AGREE THAT, BY ENTERING INTO THESE TERMS, YOU AND Runnable ARE EACH WAIVING THE RIGHT TO A TRIAL BY JURY OR TO PARTICIPATE IN A CLASS ACTION.
          <li class="li" start="19"><strong class="weight-strong">Exceptions</strong>. Despite the provisions of Section 20.1, nothing in these Terms will be deemed to waive, preclude, or otherwise limit the right of either party to: (a) bring an individual action in small claims court; (b) pursue an enforcement action through the applicable federal, state, or local agency if that action is available; (c) seek injunctive relief in a court of law; or (d) to file suit in a court of law to address an intellectual property infringement claim.
          <li class="li" start="19"><strong class="weight-strong">Arbitrator</strong>. Any arbitration between you and Runnable will be settled under the Federal Arbitration Act, and governed by the Commercial Dispute Resolution Procedures and the Supplementary Procedures for Consumer Related Disputes (collectively, “<strong class="weight-strong">AAA Rules</strong>”) of the American Arbitration Association (“<strong class="weight-strong">AAA</strong>”), as modified by these Terms, and will be administered by the AAA. The AAA Rules and filing forms are available online at www.adr.org, by calling the AAA at 1-800-778-7879, or by contacting Runnable.
          <li class="li" start="19"><strong class="weight-strong">Notice; Process</strong>. A party who intends to seek arbitration must first send a written notice of the dispute to the other party by certified U.S. Mail or by Federal Express (signature required) or, only if such other party has not provided a current physical address, then by electronic mail (“<strong class="weight-strong">Notice</strong>”). Runnable’s address for Notice is: Runnable, Inc., 1481 Folsom Street, San Francisco, CA 94103. The Notice must: (a) describe the nature and basis of the claim or dispute; and (b) set forth the specific relief sought (“<strong class="weight-strong">Demand</strong>”). The parties will make good faith efforts to resolve the claim directly, but if the parties do not reach an agreement to do so within 30 days after the Notice is received, you or Runnable may commence an arbitration proceeding. During the arbitration, the amount of any settlement offer made by you or Runnable must not be disclosed to the arbitrator until after the arbitrator makes a final decision and award, if any. If the dispute is finally resolved through arbitration in your favor, Runnable will pay you the highest of the following: (i) the amount awarded by the arbitrator, if any; (ii) the last written settlement amount offered by Runnable in settlement of the dispute prior to the arbitrator’s award; or (iii) $1,000.
          <li class="li" start="19"><strong class="weight-strong">Fees</strong>. If you commence arbitration in accordance with these Terms, Runnable will reimburse you for your payment of the filing fee, unless your claim is for more than $10,000, in which case the payment of any fees will be decided by the AAA Rules. Any arbitration hearing will take place at a location to be agreed upon in San Francisco County, California, but if the claim is for $10,000 or less, you may choose whether the arbitration will be conducted: (a) solely on the basis of documents submitted to the arbitrator; (b) through a non-appearance based telephone hearing; or (c) by an in-person hearing as established by the AAA Rules in the county (or parish) of your billing address. If the arbitrator finds that either the substance of your claim or the relief sought in the Demand is frivolous or brought for an improper purpose (as measured by the standards set forth in Federal Rule of Civil Procedure 11(b)), then the payment of all fees will be governed by the AAA Rules. In that case, you agree to reimburse Runnable for all monies previously disbursed by it that are otherwise your obligation to pay under the AAA Rules. Regardless of the manner in which the arbitration is conducted, the arbitrator must issue a reasoned written decision sufficient to explain the essential findings and conclusions on which the decision and award, if any, are based. The arbitrator may make rulings and resolve disputes as to the payment and reimbursement of fees or expenses at any time during the proceeding and upon request from either party made within 14 days of the arbitrator’s ruling on the merits.
          <li class="li" start="19"><strong class="weight-strong">No Class Actions</strong>. YOU AND Runnable AGREE THAT EACH MAY BRING CLAIMS AGAINST THE OTHER ONLY IN YOUR OR ITS INDIVIDUAL CAPACITY AND NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY PURPORTED CLASS OR REPRESENTATIVE PROCEEDING. Further, unless both you and Runnable agree otherwise, the arbitrator may not consolidate more than one person’s claims, and may not otherwise preside over any form of a representative or class proceeding.
          <li class="li" start="19"><strong class="weight-strong">Modifications to this Arbitration Provision</strong>. If Runnable makes any future change to this arbitration provision, other than a change to Runnable’s address for Notice, you may reject the change by sending us written notice within 30 days of the change to Runnable’s address for Notice, in which case your account with Runnable will be immediately terminated and this arbitration provision, as in effect immediately prior to the changes you rejected will survive.
          <li class="li" start="19"><strong class="weight-strong">Enforceability</strong>. If Section 20.6 is found to be unenforceable or if the entirety of this Section 20 is found to be unenforceable, then the entirety of this Section 20 will be null and void and, in that case, the parties agree that the exclusive jurisdiction and venue described in Section 18 will govern any action arising out of or related to these Terms.
        </ol>
      <li class="li"><strong class="weight-strong">Consent to Electronic Communications</strong>. By using the Service, you consent to receiving certain electronic communications from us as further described in our Privacy Policy. Please read our Privacy Policy to learn more about our electronic communications practices. You agree that any notices, agreements, disclosures, or other communications that we send to you electronically will satisfy any legal communication requirements, including that those communications be in writing.
      <li class="li"><strong class="weight-strong">Contact Information</strong>. The Service is offered by Runnable, Inc., located at 1481 Folsom Street, San Francisco, CA 94103. You may contact us by sending correspondence to that address or by emailing us at <a href="mailto:accounts@runnable.com" class="link">accounts@runnable.com</a>.
    </ol>
  </div>
</article>

    </main>

    <footer class="grid-block col footer justify-spaced">
  <a data-target="#sign-up" class="sign-up-box grid-block col well well-anchor js-modal track-sign-up">
  <img class="img no-touching" src="images/runnabear-hello.png">
  <p class="p js-modal">Try Runnable! It’s <strong class="weight-strong">free</strong> for 14 days.
  <div data-target="#sign-up" class="btn btn-sm green js-modal track-sign-up">Sign Up</div>
</a>

  <aside class="grid-block aside-support">
  <div class="grid-block col justify-center support-text">
    <p class="p weight-strong">Our engineers are here for you.</p>
    <p class="p">We can answer questions about Docker <br class="br">and help you set up your stack.</p>
  </div>
  <figure class="grid-block col figure shrink">
    <div class="grid-block shrink bubble">
      <img class="img float-left" src="images/logos/logo-slack.svg" height="18" width="18" alt="Slack">
      <div class="grid-block col">
        <div class="user">
          <strong class="strong user-name">Jorge</strong>
          <span class="user-time"> 4:19 PM</span>
        </div>
        <p class="p user-text">Can I run multiple commands?</p>
      </div>
    </div>
    <div class="grid-block shrink bubble">
      <img class="img float-left" src="images/runnabot-head.png" height="18" width="18" alt="Slack">
      <div class="grid-block col">
        <div class="user">
          <strong class="strong user-name">Taylor</strong>
          <span class="user-time"> 4:20 PM</span>
        </div>
        <p class="p user-text">Hi <span class="link-blue">@jorge</span>!
          <br>Yes you can. Here’s how: …
        </p>
      </div>
    </div>
  </figure>
</aside>

  <div class="grid-block link-wrapper">
    <div class="grid-block col align-start">
      <a href="for/" class="btn btn-xs link weight-strong">Product</a>
      <a href="pricing/" class="btn btn-xs link weight-strong">Pricing</a>
      <a href="how-it-works/" class="btn btn-xs link weight-strong">How It Works</a>
      <a href="https://support.runnable.com" class="btn btn-xs link weight-strong">Get Help</a>
      <a href="https://runnable.com/docker/" class="btn btn-xs link weight-strong">Docker Guides</a>
      <a href="demo/" class="btn btn-xs link weight-strong">Request Demo</a>
    </div>
    <div class="grid-block col align-start">
      <a href="http://blog.runnable.com" class="btn btn-xs link weight-strong">Blog</a>
      <a href="about/" class="btn btn-xs link weight-strong">About</a>
      <a href="legal/privacy-policy/" class="btn btn-xs link weight-strong">Privacy</a>
      <a href="legal/terms-of-service/" class="btn btn-xs link weight-strong">Terms</a>
      <a href="legal/acceptable-use-policy/" class="btn btn-xs link weight-strong">Acceptable Use</a>
    </div>
  </div>
</footer>

    <div class="modal-backdrop" id="sign-up">
  <header class="grid-block shrink header">
  <div class="grid-block grid-container align-center justify-justified">
    
    <a class="grid-content shrink logo hidden-sm">
      <img class="img" src="images/runnable-logo.svg" height="36" width="192">
    </a>
    
    
    
    <div class="grid-block shrink align-center">
      
      <a class="grid-block align-center shrink btn btn-sm btn-white js-open-bitbucket track-bitbucket">
        <svg class="icons icons-bitbucket">
          <use xlink:href="#icons-bitbucket">
        </svg>
        <span>Sign Up with Bitbucket</span>
      </a>
      <a class="grid-block align-center justify-center btn btn-sm btn-white js-open-github hide">
        <svg class="icons icons-github">
          <use xlink:href="#icons-github">
        </svg>
        <span>Sign Up with GitHub</span>
      </a>
      
      
      <a class="grid-block align-center btn btn-sm btn-white js-modal-close">
        <svg class="icons icons-close">
          <use xlink:href="#icons-close">
        </svg>
        <span>Close</span>
      </a>
      
    </div>
  </div>
</header>

  <div class="modal">
    <article class="grid-block col align-center noscroll article article-form article-github article-sign-up slide in">
  <h1 class="grid-content shrink h2 text-white weight-strong text-center">Add your code to speed up your development.</h1>
  <p class="grid-content shrink p text-center text-white">Free for 14 days.<br class="visible-xxxs"> No card required.</p>
  <div class="grid-block col card padding-top-sm">
    <img class="img" src="images/runnabear-peek.png" height="130" width="230">
    <div class="grid-block col padding-lg form-wrapper">
      <a href="{{loginUrl}}" class="grid-block justify-center align-center btn btn-lg green wrap-xxxs track-grant-access-github">
        <svg class="icons hidden-xxxs">
          <use xlink:href="#icons-github">
        </svg>
        <span>Sign Up With GitHub</span>
      </a>
      <p class="grid-content shrink p padding-top-sm text-center">By continuing, you are agreeing to<br class="br"> our <a href="legal/terms-of-service/" class="link">terms of service</a>.</p>
    </div>
  </div>
  <div class="grid-content text-center text-white">
    
    <a data-target="#sign-in" class="link js-modal">Sign in</a> if your team is already using Runnable.
    
    
  </div>
</article>

<article class="grid-block col align-center noscroll article article-form article-sign-up article-bitbucket slide">
  <div class="grid-block col card shake-me">
    <img class="img" src="images/runnabear-pop.png" height="130" width="230">
    <form class="grid-block col form form-bitbucket show">
      <div class="grid-block col padding-lg form-wrapper">
        <label class="p text-center padding-sm" for="input-name">We’ll let you know when we roll out Bitbucket support.</label>
        <div class="grid-block col show">
          <div class="grid-content input-group-vertical input-group-org">
            <label class="label" for="input-name">Your Name</label>
            <input class="input input-md input-validate pristine" id="input-name" name="name" placeholder="Runnabear" title="Enter your name, so we can be bffs." required>
          </div>
          <div class="grid-content input-group-vertical input-group-org">
            <label class="label" for="input-email">Work Email</label>
            <input class="input input-md input-validate pristine" id="input-email" name="email" pattern="\S+@\S+\.\S+" placeholder="runnabear@runnable.com" title="Enter a valid email for us to follow up with."  type="email" required>
          </div>
        </div>
      </div>
      <footer class="card-footer">
        <button class="grid-block justify-center align-center btn btn-lg green wrap-xxxs">
          <div class="grid-block justify-center align-center">
            <svg class="icons hidden-xxxs">
              <use xlink:href="#icons-bitbucket">
            </svg>
            <span class="grid-content shrink">Notify Me</span>
          </div>
        </button>
      </footer>
    </form>
    <div class="grid-block col justify-center padding-lg hide">
      <p class="p text-center">Thanks, we’ll be in touch! 🙌</p>
    </div>
  </form>
</article>


  </div>
</div>

<div class="modal-backdrop" id="sign-in">
  <header class="grid-block shrink header">
  <div class="grid-block grid-container align-center justify-justified">
    
    <a class="grid-content shrink logo hidden-sm">
      <img class="img" src="images/runnable-logo.svg" height="36" width="192">
    </a>
    
    
    
    <div class="grid-block shrink align-center">
      
      
      <a class="grid-block align-center btn btn-sm btn-white js-modal-close">
        <svg class="icons icons-close">
          <use xlink:href="#icons-close">
        </svg>
        <span>Close</span>
      </a>
      
    </div>
  </div>
</header>

  <div class="modal">
    <article class="grid-block noscroll col article article-form article-sign-in">
  <div class="grid-block col card padding-top-sm">
    <img class="img" src="images/runnabear-peek.png" height="130" width="230">
    <div class="grid-block col padding-lg form-wrapper">
      <a href="{{loginUrl}}" class="grid-block justify-center align-center btn btn-lg green track-sign-in">
        <svg class="icons hidden-xs">
          <use xlink:href="#icons-github">
        </svg>
        <span>Sign In With GitHub</span>
      </a>
      <p class="grid-content shrink p padding-top-sm text-center">By continuing, you are agreeing to<br class="hidden-xs"> our <a href="legal/terms-of-service/" class="link">terms of service</a>.</p>
    </div>
  </div>
  <div class="grid-content text-center text-white">
    
    <a data-target="#sign-up" class="link js-modal">Sign up</a> if your team isn’t using Runnable yet.
    
    
  </div>
</article>

  </div>
</div>


    <!-- segment.io-->
<script>
  var match,
    pl     = /\+/g,  // Regex for replacing addition symbol with a space
    search = /([^&=]+)=?([^&]*)/g,
    decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
    query  = window.location.search.substring(1),
    urlParams = {};
  while (match = search.exec(query))
    urlParams[decode(match[1])] = decode(match[2]);
  !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.1.0";
    analytics.load("m1OwMrg9ytNWONfJ0J1ig8GOH91MkWNT");
  }}();
  analytics.ready( function() {
    ga('require', 'GTM-5T3HJWM');
    ga('require', 'linker');
    ga('linker:autoLink', ['runnable.io', 'runnable.com']);
    analytics.page({
      clientId: ga.getAll()[0].get('clientId'),
      querystrings: urlParams
    });
    var signUp = document.getElementsByClassName('track-sign-up');
    var signIn = document.getElementsByClassName('track-sign-in');
    var github = document.getElementsByClassName('track-github');
    var bitbucket = document.getElementsByClassName('track-bitbucket');
    var grantGitHubPerms = document.getElementsByClassName('track-grant-access-github');
    analytics.trackLink(signUp, 'Clicked Sign Up');
    analytics.trackLink(signIn, 'Clicked Sign In');
    analytics.trackLink(github, 'Clicked GitHub');
    analytics.trackLink(bitbucket, 'Clicked Bitbucket');
    analytics.trackLink(grantGitHubPerms, 'Clicked Grant GitHub Permissions');

    // Attach anonymous_id to links
    var aid = analytics.user().anonymousId();
    for (var j=0; j<signIn.length; j++) {
      append_id(signIn[j], aid, 'Signed%20In');
    }
    for (var k=0; k<grantGitHubPerms.length; k++) {
      append_id(grantGitHubPerms[k], aid, 'Signed%20Up');
    }
    function append_id(link, id, event) {
      ga(function(tracker) {
        link.addEventListener('click', link.href=link.href+'%26ajs_aid='+id+'%26ajs_event='+event+'%26'+tracker.get('linkerParam'));
      });
    }
  });
</script>
<script>
  analytics.ready(function(){
    ga('require', 'Clearbit', {
      mapping: {
        companyName:           'dimension3',
        companyEmployeesRange: 'dimension4',
        companyTags:           'dimension5',
        companyTech:           'dimension6',
        companySubIndustry:    'dimension7',
        companyIndustry:       'dimension8',
        companyIndustryGroup:  'dimension9',
        companySector:         'dimension10',
        companyType:           'dimension11',
        companyDomain:         'dimension12'
      }
    });
  });
</script>

<script async src="https://ga.clearbit.com/v1/ga.js?authorization=pk_1bc83be89f2224b36e22e6fc5d1013ea"></script>
<!-- statuspage.io -->
<script async src="https://cdn.statuspage.io/se-v2.js"></script>

